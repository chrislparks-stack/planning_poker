fragment UserFragment on User {
  id
  username
}

fragment DeckFragment on Deck {
  id
  cards
}

fragment UserCardFragment on UserCard {
  userId
  card
}

fragment GameFragment on Game {
  id
  table {
    ...UserCardFragment
  }
}

fragment RoomFragment on Room {
  id
  name
  isGameOver
  roomOwnerId
  users {
    ...UserFragment
  }
  bannedUsers
  deck {
    ...DeckFragment
  }
  game {
    ...GameFragment
  }
  countdownEnabled
  revealStage
  countdownValue
  confirmNewGame
}

mutation CreateRoom($roomId: UUID, $name: String, $cards: [String!]!) {
  createRoom(roomId: $roomId, name: $name, cards: $cards) {
    ...RoomFragment
  }
}

mutation CreateUser($username: String!) {
  createUser(username: $username) {
    ...UserFragment
  }
}

mutation JoinRoom($roomId: UUID!, $user: UserInput!) {
  joinRoom(roomId: $roomId, user: $user) {
    ...RoomFragment
  }
}

mutation UpdateDeck($roomId: UUID!, $cards: [String!]!) {
  updateDeck(input: { roomId: $roomId, cards: $cards }) {
    ...RoomFragment
  }
}

mutation RenameRoom($roomId: UUID!, $name: String) {
  renameRoom(roomId: $roomId, name: $name) {
    ...RoomFragment
  }
}

mutation ToggleCountdownOption($roomId: UUID!, $enabled: Boolean!) {
  toggleCountdownOption(roomId: $roomId, enabled: $enabled) {
    ...RoomFragment
  }
}

mutation StartRevealCountdown($roomId: UUID!, $userId: UUID) {
  startRevealCountdown(roomId: $roomId, userId: $userId) {
    ...RoomFragment
  }
}

mutation CancelRevealCountdown($roomId: UUID!, $userId: UUID) {
  cancelRevealCountdown(roomId: $roomId, userId: $userId) {
    ...RoomFragment
  }
}

mutation SetRoomOwner($roomId: UUID!, $userId: UUID!) {
  setRoomOwner(roomId: $roomId, userId: $userId) {
    ...RoomFragment
  }
}

mutation EditUser($userId: UUID!, $username: String!) {
  editUser(userId: $userId, username: $username) {
    ...UserFragment
  }
}

mutation Logout($userId: UUID!) {
  logout(userId: $userId)
}

mutation PickCard($userId: UUID!, $roomId: UUID!, $card: String!) {
  pickCard(userId: $userId, roomId: $roomId, card: $card) {
    ...RoomFragment
  }
}

mutation ShowCards($roomId: UUID!) {
  showCards(roomId: $roomId) {
    ...RoomFragment
  }
}

mutation ResetGame($roomId: UUID!) {
  resetGame(roomId: $roomId) {
    ...RoomFragment
  }
}

mutation KickUser($roomId: UUID!, $targetUserId: UUID!) {
  kickUser(roomId: $roomId, targetUserId: $targetUserId) {
    ...RoomFragment
  }
}

mutation BanUser($roomId: UUID!, $targetUserId: UUID!) {
  banUser(roomId: $roomId, targetUserId: $targetUserId) {
    ...RoomFragment
  }
}

mutation UnbanUser($roomId: UUID!, $targetUserId: UUID!) {
  unbanUser(roomId: $roomId, targetUserId: $targetUserId) {
    ...RoomFragment
  }
}

mutation ToggleConfirmNewGame($roomId: UUID!, $enabled: Boolean!) {
  toggleConfirmNewGame(roomId: $roomId, enabled: $enabled) {
    ...RoomFragment
  }
}

subscription Room($roomId: UUID!) {
  room(roomId: $roomId) {
    ...RoomFragment
  }
}

query GetRoom($roomId: UUID!) {
  roomById(roomId: $roomId) {
    ...RoomFragment
  }
}
